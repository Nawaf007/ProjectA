<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="EvaluationCreate.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAA7JJREFUSEuN
        VVtvTVEQPj9B2mrPrhLePYgX4s2jVlBSRZo27lq8EC9oIpKiIV4QIkHT6HEpp6VJm1KHhGg01aCaItoG
        VZem91KkmTHf7L3WWZsjMcl3Zva6fN+sNbP3iUxPTzMMHiAifYbvHezkipbVXBSLpgTmsMZwwAyPiSMa
        ibmD/WOvLUnJdY9Lm2fz7vvzuKxljgIxxjBn1mFPKgudAFbdftAS70pYYgJ23MlRBM86hzVGqLq9XHlc
        hASOJtbqwh2NOW7GIOUUUBEjhD3FsWw+1JSvfDAVCGKuflqu5KXNc2WDv9EQwZc/WkKVbXkKie24EdiV
        mMslcY9zz6TzqcQeJUcdVeDD6Csn8xC5JWr9fMOvvpjEOm5OoOR1UV4Ty+T8qiwV6R18qWv1ioqvZus9
        mmtxyAMBT0hjEFBILOOeCrjkwLraKC8/l6EieoKeweeaPYqVghwwApoRDHFZSw79SQ4UXI2KyCwVeP2p
        gyMVLflcUvvP7AN4yNo9AZXenfUXuRXRU2TyvrpcjhSLYpn0dJjcC2HrnUx+9DF5AsQb6tJ4VSw9BCsg
        nKtjfi0gQEH2WsyD0iFtX25R20CcBfDUOlBLQz/fgVtP8H70DTW8vEiN3RdZAC+4TNvrF0KARIDkmkgE
        KBDQ7CFAx54sM0SuN0aT377z0MgYQK6fGJ+ivY1LVcBck3OCkIC5a1hI4PvUDxocGgkEJoV40niaGP/F
        jgCJgHuC5BUdeLiIHg7U0IMP1SwI/CXuG+6y2XZ97ODaZ6cp3nmaBYE/T9vqF9gaBJ1EEWlR2uYXWQV8
        eBJ7MpaDbqH1dWlU/+I8j0qmgMSS5QwBCpvueC2y1kCKLCeYSZHKe+v+esngAfR5kbQiOqTBF1Ag9knD
        7QmY7NGm++tXcuT9UDcXXbEvmvlS4iUikPsbUwqYjA30GQKF1/0W7fnayRG8zvgKBqewr3+S/P8F3Ozl
        epJf088Tffq52HLbf/2FHJvtnQINXVXSKVMKie14AGQuvR+lFRcy0D3cP/pWO09PAKX4ixO8MZZNG256
        mhE2wBuCzfH5tLNhMQtIYjsO72cepYIavRqqenxYyWH2Dwd2MrFVexdZ6AbZ+KeQ6zEH4AtqMj/WvJkM
        p14RflxcaT+uBcInt/BaFjLTwgEBsX3GHNaYz3NNW6UlNt7+o7n2aayP86RI2JR3NoNxdBQvSSyxjGFO
        18ha7HGJjYX+k90JxP3Db7miqYRzz6anxJGmTboGdYSZeiY5p/k35IEqKxXUwhYAAAAASUVORK5CYII=
</value>
  </data>
</root>